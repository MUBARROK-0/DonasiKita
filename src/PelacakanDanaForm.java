/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author rizqi mubarrok
 */

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.DriverManager;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.Date;
import java.text.DecimalFormat;

public class PelacakanDanaForm extends javax.swing.JPanel {

    /**
     * Creates new form PelacakanDanaForm
     */
    public PelacakanDanaForm() {
        initComponents();
        loadTable();
    }
    
    private void loadTable() {
    DecimalFormat df = new DecimalFormat("#,###.###");
    try {
        Connection conn = DatabaseConnection.connect();
        String query = "SELECT * FROM pelacakan_dana";
        PreparedStatement pstmt = conn.prepareStatement(query);
        ResultSet rs = pstmt.executeQuery();

        DefaultTableModel model = (DefaultTableModel) TabelPelacakanDana.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("id_kampanye"),
                rs.getDouble("total_terkumpul"),
                rs.getDouble("total_didistribusikan"),
                rs.getDouble("total_tersisa")
            });
        }

        rs.close();
        pstmt.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data pelacakan dana: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void updateTotalTerkumpul(int idKampanye, double jumlahDonasi) {
    try {
        Connection conn = DatabaseConnection.connect();
        String query = "UPDATE pelacakan_dana SET total_terkumpul = total_terkumpul + ? WHERE id_kampanye = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setDouble(1, jumlahDonasi);
        pstmt.setInt(2, idKampanye);
        pstmt.executeUpdate();
        pstmt.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memperbarui total terkumpul: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
    private void updateTotalDidistribusikan(int idKampanye, double jumlahDistribusi) {
    try {
        Connection conn = DatabaseConnection.connect();
        String query = "UPDATE pelacakan_dana SET total_didistribusikan = total_didistribusikan + ? WHERE id_kampanye = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setDouble(1, jumlahDistribusi);
        pstmt.setInt(2, idKampanye);
        pstmt.executeUpdate();
        pstmt.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memperbarui total didistribusikan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    
    private void updatePelacakanDana(int idKampanye, double jumlahDistribusi) {
    try {
        Connection conn = DatabaseConnection.connect(); // Menghubungkan ke database
        if (conn != null) {
            // Query untuk memperbarui tabel pelacakan_dana setelah dana didistribusikan
            String query = "UPDATE pelacakan_dana SET total_didistribusikan = total_didistribusikan + ? WHERE id_kampanye = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setDouble(1, jumlahDistribusi); // Menetapkan jumlah dana yang didistribusikan
            pstmt.setInt(2, idKampanye); // Menetapkan ID kampanye

            pstmt.executeUpdate(); // Menjalankan query untuk memperbarui pelacakan dana
            pstmt.close(); // Menutup PreparedStatement
            conn.close(); // Menutup koneksi ke database
        } else {
            JOptionPane.showMessageDialog(this, "Koneksi database gagal.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memperbarui pelacakan dana: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPelacakanDana = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        TabelPelacakanDana.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Kampanye", "Total Terkumpul", "Total Didistribusikan", "Total Tersisa"
            }
        ));
        jScrollPane1.setViewportView(TabelPelacakanDana);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelPelacakanDana;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
